---
# Downloads and installs custom info-display application from GitHub releases
# for Raspberry Pi OLED display
- name: Set info-display package variables
  set_fact:
    info_display_package: "info-display"
    info_display_version: "1.2.0"
    info_display_arch: "arm64"
    github_repo: "3vilM33pl3/homelab"
    package_filename: "info-display_1.2.0-1_arm64.deb"
  when: inventory_hostname in ['white', 'orange', 'pink', 'ca']
  

- name: Get latest release info from GitHub
  uri:
    url: "https://api.github.com/repos/{{ github_repo }}/releases/latest"
    method: GET
    return_content: yes
    status_code: [200, 404]
  register: github_release
  delegate_to: localhost
  become: no
  run_once: true
  

- name: Check if release exists
  set_fact:
    release_exists: "{{ github_release.status == 200 }}"
  run_once: true
  

- name: Extract download URL and checksum for the debian package
  set_fact:
    package_download_url: "{{ github_release.json.assets | selectattr('name', 'match', '.*\\.deb$') | map(attribute='browser_download_url') | first }}"
    package_checksum_url: "{{ github_release.json.assets | selectattr('name', 'match', '.*\\.deb\\.sha256$') | map(attribute='browser_download_url') | first | default('') }}"
  when:
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
  

- name: Download checksum file if available
  get_url:
    url: "{{ package_checksum_url }}"
    dest: "/tmp/{{ package_filename }}.sha256"
    mode: '0644'
    timeout: 10
  when:
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
    - package_checksum_url | length > 0
  ignore_errors: yes
  register: checksum_download
  

- name: Read checksum from file
  slurp:
    src: "/tmp/{{ package_filename }}.sha256"
  register: checksum_file
  when:
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
    - checksum_download is succeeded
  

- name: Extract checksum value
  set_fact:
    package_checksum: "sha256:{{ (checksum_file.content | b64decode).split()[0] }}"
  when:
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
    - checksum_download is succeeded
  

- name: Download info-display debian package from GitHub (with checksum)
  get_url:
    url: "{{ package_download_url }}"
    dest: "/tmp/{{ package_filename }}"
    checksum: "{{ package_checksum | default(omit) }}"
    mode: '0644'
    timeout: 30
  when:
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
  

- name: Display message when no release is available
  debug:
    msg: "No GitHub releases found for {{ github_repo }}. Skipping info-display installation."
  when: 
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - not release_exists
  


- name: Install info-display package
  apt:
    deb: "/tmp/{{ package_filename }}"
    state: present
  when: 
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
  

- name: Clean up temporary package file
  file:
    path: "/tmp/{{ package_filename }}"
    state: absent
  when: 
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
  

- name: Enable and start info-display systemd service
  systemd:
    name: info-display.service
    enabled: yes
    state: started
    daemon_reload: yes
  when: 
    - inventory_hostname in ['white', 'orange', 'pink', 'ca']
    - release_exists
  